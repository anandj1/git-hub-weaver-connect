# Python Cheat Sheet

## Basic Syntax
```python
# Variables
name = "John"
age = 25
is_student = True

# Print
print("Hello, World!")
print(f"My name is {name}")

# Comments
# This is a single line comment
"""
This is a
multi-line comment
"""
```

## Data Types
```python
# Numbers
integer = 42
float_num = 3.14
complex_num = 1 + 2j

# Strings
text = "Hello"
multiline = """This is
a multiline string"""

# Lists
fruits = ["apple", "banana", "orange"]
numbers = [1, 2, 3, 4, 5]

# Dictionaries
person = {
    "name": "Alice",
    "age": 30,
    "city": "New York"
}

# Tuples
coordinates = (10, 20)

# Sets
unique_numbers = {1, 2, 3, 4, 5}
```

## Control Flow
```python
# If statements
if age >= 18:
    print("Adult")
elif age >= 13:
    print("Teenager")
else:
    print("Child")

# For loops
for i in range(5):
    print(i)

for fruit in fruits:
    print(fruit)

# While loops
count = 0
while count < 5:
    print(count)
    count += 1
```

## Functions
```python
# Basic function
def greet(name):
    return f"Hello, {name}!"

# Function with default parameter
def power(base, exponent=2):
    return base ** exponent

# Lambda function
square = lambda x: x ** 2
```

## Classes
```python
class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    
    def introduce(self):
        return f"Hi, I'm {self.name} and I'm {self.age} years old"

# Create object
person = Person("Bob", 25)
print(person.introduce())
```

## File Handling
```python
# Writing to file
with open("file.txt", "w") as f:
    f.write("Hello, World!")

# Reading from file
with open("file.txt", "r") as f:
    content = f.read()
    print(content)
```

## Error Handling
```python
try:
    result = 10 / 0
except ZeroDivisionError:
    print("Cannot divide by zero!")
except Exception as e:
    print(f"An error occurred: {e}")
finally:
    print("This always executes")
```

## List Comprehensions
```python
# Basic list comprehension
squares = [x**2 for x in range(10)]

# With condition
even_squares = [x**2 for x in range(10) if x % 2 == 0]

# Dictionary comprehension
square_dict = {x: x**2 for x in range(5)}
```

## Common Built-in Functions
```python
# len() - length
print(len([1, 2, 3]))  # 3

# max() and min()
print(max([1, 5, 3]))  # 5
print(min([1, 5, 3]))  # 1

# sum()
print(sum([1, 2, 3, 4]))  # 10

# sorted()
print(sorted([3, 1, 4, 1, 5]))  # [1, 1, 3, 4, 5]

# enumerate()
for i, value in enumerate(['a', 'b', 'c']):
    print(f"{i}: {value}")

# zip()
names = ['Alice', 'Bob', 'Charlie']
ages = [25, 30, 35]
for name, age in zip(names, ages):
    print(f"{name} is {age} years old")
```

## String Methods
```python
text = "Hello, World!"

# Common string methods
print(text.lower())        # hello, world!
print(text.upper())        # HELLO, WORLD!
print(text.replace("Hello", "Hi"))  # Hi, World!
print(text.split(","))     # ['Hello', ' World!']
print("  text  ".strip())  # text
```

## List Methods
```python
fruits = ["apple", "banana"]

# Adding elements
fruits.append("orange")      # Add to end
fruits.insert(0, "grape")   # Insert at index
fruits.extend(["kiwi", "mango"])  # Add multiple

# Removing elements
fruits.remove("banana")      # Remove by value
popped = fruits.pop()        # Remove and return last
del fruits[0]               # Remove by index

# Other methods
fruits.sort()               # Sort in place
fruits.reverse()            # Reverse in place
count = fruits.count("apple")  # Count occurrences
```